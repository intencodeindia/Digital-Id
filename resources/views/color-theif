<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Extract Colors from Image</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Arial', sans-serif;
            padding-top: 50px;
        }
        .header {
            font-size: 2.5rem;
            font-weight: bold;
            color: #333;
        }
        .upload-btn {
            margin-top: 20px;
        }
        .img-container {
            margin-top: 20px;
            text-align: center;
        }
        .color-box {
            height: 80px; /* Fixed height */
            transition: transform 0.3s;
            border-radius: 5px;
        }
        .color-box:hover {
            transform: scale(1.1);
        }
        .color-palette {
            margin-top: 20px;
        }
        #uploadedImage {
            width: 300px; /* Fixed width */
            height: 300px; /* Fixed height */
            object-fit: cover;
            border-radius: 8px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>

    <div class="container text-center">
        <h1 class="header mb-5">Extract Colors from Image</h1>
        <p>Upload an image, and we'll automatically extract the dominant colors for you.</p>

        <!-- File Input for Image -->
        <input type="file" id="imageInput" class="form-control upload-btn" accept="image/*">
        
        <!-- Image Display Area -->
        <div id="img-container" class="img-container"></div>

        <!-- Color Palette Area -->
        <div id="colorsContainer" class="row color-palette justify-content-center"></div>
    </div>

    <!-- Bootstrap 5.3 JS and Color Thief -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/color-thief/2.3.0/color-thief.umd.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.getElementById('imageInput').addEventListener('change', handleImageUpload);

        function handleImageUpload(event) {
            const file = event.target.files[0];
            if (file) {
                const imgElement = document.createElement('img');
                imgElement.src = URL.createObjectURL(file);
                imgElement.onload = () => {
                    // Show the uploaded image
                    const imgContainer = document.getElementById('img-container');
                    imgContainer.innerHTML = ''; // Clear any previous content
                    imgContainer.appendChild(imgElement);
                    imgElement.classList.add('img-fluid');
                    extractColors(imgElement);
                };
            }
        }

        function extractColors(imgElement) {
            const colorThief = new ColorThief();

            // Ensure the image is fully loaded before extracting colors
            if (imgElement.complete) {
                showColors(imgElement);
            } else {
                imgElement.addEventListener('load', function () {
                    showColors(imgElement);
                });
            }

            function showColors(imgElement) {
                // Extract dominant color and color palette
                const dominantColor = colorThief.getColor(imgElement);

                // Define the number of colors to extract dynamically (can be 5, 15, or 90)
                const numberOfColors = 8; // You can change this value (5, 15, 90, etc.)
                const palette = colorThief.getPalette(imgElement, numberOfColors);

                displayColors(dominantColor, palette);
            }

            function displayColors(dominantColor, palette) {
                const colorsContainer = document.getElementById('colorsContainer');
                colorsContainer.innerHTML = ''; // Clear previous colors

                // Display the dominant color as a larger color box (optional)
                const dominantColorBox = document.createElement('div');
                dominantColorBox.classList.add('col-2', 'col-md-1', 'mb-2');
                dominantColorBox.innerHTML = ` 
                    <div class="color-box" style="background-color: rgb(${dominantColor.join(', ')})"></div>
                `;
                colorsContainer.appendChild(dominantColorBox);

                // Display color palette with exact number of colors as col-2 blocks, responsive
                palette.forEach(color => {
                    const colorBox = document.createElement('div');
                    colorBox.classList.add('col-2', 'col-md-1', 'mb-2');
                    colorBox.innerHTML = ` 
                        <div class="color-box" style="background-color: rgb(${color.join(', ')})"></div>
                    `;
                    colorsContainer.appendChild(colorBox);
                });
            }
        }
    </script>

</body>
</html>
